{
  "description": "Future-Customer-Value-Segments Dataflow pipeline (CSV version)",
  "name": "Future-Customer-Value-Segments",
  "parameters": [
    {
      "regexes": [
        "^gs:\\/\\/[^\\n\\r]+$"
      ],
      "name": "input_csv",
      "label": "Input CSV file (containing transactions)",
      "helpText": "Cloud Storage path of the transactions input file (CSV format)."
    },
    {
      "regexes": [
        "^[0-9]+$"
      ],
      "name": "customer_id_column_position",
      "label": "Customer ID column position",
      "helpText": "Column position in the input CSV file containing the Customer ID."
    },
    {
      "regexes": [
        "^[0-9]+$"
      ],
      "name": "sales_column_position",
      "label": "Sales column position",
      "helpText": "Column position in the input CSV file containing the Sales value (revenue or other $ amount)."
    },
    {
      "regexes": [
        "^[0-9]+$"
      ],
      "name": "transaction_date_column_position",
      "label": "Transaction Date column position",
      "helpText": "Column position in the input CSV file containing the Date of the Transaction."
    },
    {
      "regexes": [
        "(YYYY-MM-DD|MM/DD/YY|MM/DD/YYYY|DD/MM/YY|DD/MM/YYYY|YYYYMMDD|)"
      ],
      "name": "date_parsing_pattern",
      "label": "Date Format",
      "helpText": "One of \"YYYY-MM-DD\", \"MM/DD/YY\", \"MM/DD/YYYY\", \"DD/MM/YY\", \"DD/MM/YYYY\", \"YYYYMMDD\". If the date format in the CSV files does not appear here please reformat the file to match one of those formats."
    },
    {
      "regexes": [
        "^[0-9]*$"
      ],
      "name": "extra_dimension_column_position",
      "label": "Extra Dimension column position",
      "is_optional": true,
      "helpText": "[Default no extra dimension] Column position in the input CSV file containing the Extra Dimension (Channel, Location, Category, etc). This field can be empty."
    },
    {
      "regexes": [
        "^gs:\\/\\/[^\\n\\r]+\\/$"
      ],
      "name": "output_folder",
      "label": "Output folder (where result files will be stored)",
      "helpText": "Cloud Storage path where result files containing the predictions will be stored. Put a '/' at the end of the path."
    },
    {
      "regexes": [
        "(BGNBD|MBGNBD|BGBB|PNBD|)"
      ],
      "name": "frequency_model_type",
      "label": "Frequency Model Type",
      "is_optional": true,
      "helpText": "[Default MBGNBD] \"BGNBD\", \"MBGNBD\", \"BGBB\", or \"PNBD\". BG/NBD (or MBG/NBD), Pareto/NBD or the experimental BG/BB (a.k.a. Beta Bernoulli) frequency model."
    },
    {
      "regexes": [
        "(true|false|)"
      ],
      "name": "round_numbers",
      "label": "Round Numbers in reports",
      "is_optional": true,
      "helpText": "[Default true] Whether to round numbers in the output report files."
    },
    {
      "regexes": [
        "(Daily|Weekly|Monthly|)"
      ],
      "name": "model_time_granularity",
      "label": "Model Time Granularity",
      "is_optional": true,
      "helpText": "[Default Weekly] One of \"Daily\", \"Weekly\", \"Monthly\". What time granularity to run the model with. \"Daily\" is most frequently used for apps customers who have a very short period of time between repeat transactions, while \"Monthly\" is more suited for discrete-time transaction analysis using the experimental BG/BB model."
    },
    {
      "regexes": [
        "^[0-9]{4}\\-(0?[1-9]|1[012])\\-(0?[1-9]|[12][0-9]|3[01])$"
      ],
      "name": "calibration_start_date",
      "label": "Calibration Start Date",
      "is_optional": true,
      "helpText": "[Default calculated from input data] Use YYYY-MM-DD format for this date. If empty it will be automatically calculated from the input data. If specified you must specify also the other dates corresponding to the calibration and holdout periods to be used for model validation."
    },
    {
      "regexes": [
        "^[0-9]{4}\\-(0?[1-9]|1[012])\\-(0?[1-9]|[12][0-9]|3[01])$"
      ],
      "name": "calibration_end_date",
      "label": "Calibration End Date",
      "is_optional": true,
      "helpText": "[Default calculated from input data] Use YYYY-MM-DD format for this date. If empty it will be automatically calculated from the input data. If specified you must specify also the other dates corresponding to the calibration and holdout periods to be used for model validation."
    },
    {
      "regexes": [
        "^[0-9]{4}\\-(0?[1-9]|1[012])\\-(0?[1-9]|[12][0-9]|3[01])$"
      ],
      "name": "cohort_start_date",
      "label": "Cohort Start Date",
      "is_optional": true,
      "helpText": "[Default calculated from input data] Use YYYY-MM-DD format for this date. If empty it will be automatically calculated from the input data. If specified you must specify also the other dates corresponding to the calibration and holdout periods to be used for model validation."
    },
    {
      "regexes": [
        "^[0-9]{4}\\-(0?[1-9]|1[012])\\-(0?[1-9]|[12][0-9]|3[01])$"
      ],
      "name": "cohort_end_date",
      "label": "Cohort End Date",
      "is_optional": true,
      "helpText": "[Default calculated from input data] Use YYYY-MM-DD format for this date. If empty it will be automatically calculated from the input data. If specified you must specify also the other dates corresponding to the calibration and holdout periods to be used for model validation."
    },
    {
      "regexes": [
        "^[0-9]{4}\\-(0?[1-9]|1[012])\\-(0?[1-9]|[12][0-9]|3[01])$"
      ],
      "name": "holdout_end_date",
      "label": "Holdout End Date",
      "is_optional": true,
      "helpText": "[Default calculated from input data] Use YYYY-MM-DD format for this date. If empty it will be automatically calculated from the input data. If specified you must specify also the other dates corresponding to the calibration and holdout periods to be used for model validation."
    },
    {
      "regexes": [
        "^[0-9]+$"
      ],
      "name": "prediction_period",
      "label": "Prediction Period",
      "is_optional": true,
      "helpText": "[Default 52] How far to predict out into the future (in whichever time granularity you chose, this is in \"weeks\" by default)."
    },
    {
      "regexes": [
        "^[0-9]+$"
      ],
      "name": "output_segments",
      "label": "Output Segments",
      "is_optional": true,
      "helpText": "[Default 5] The number of segments for prediction summary (i.e. 4 for quartiles, 10 for deciles)."
    },
    {
      "regexes": [
        "^([0-9]*[.])?[0-9]+$"
      ],
      "name": "penalizer_coef",
      "label": "Penalizer Coefficient",
      "is_optional": true,
      "helpText": "[Default 0.0] Penalizer Coefficient used by the Python Lifetimes library. If you tried to run the pipeline and it failed fitting the model, you can try to increase this value. More info https://lifetimes.readthedocs.io/en/latest/Quickstart.html#basic-frequency-recency-analysis-using-the-bg-nbd-model ."
    },
    {
      "regexes": [
        "^([0-9]*[.])?[0-9]+$"
      ],
      "name": "transaction_frequency_threshold",
      "label": "Model Validation Error Threshold",
      "is_optional": true,
      "helpText": "[Default 15] Maximum allowed error percentage value (MAPE) for model validation. If the validation MAPE is larger than the value provided here, the pipeline will fail. Values larger than 15% generally indicate the model's inability to fit your data. Try selecting another customer cohort using the start and end date parameters, and/or applying a penalizer coefficient."
    }
  ]
}
